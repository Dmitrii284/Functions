#include <iostream>
//Процедура - Тоесть функция не возвращающая ни каких значений и выводящая сообщения
void say_hello() {// Пустота переводится
	std::cout << "Hallo world!\n";
	std::cout << "Bye world\n";
}
// Функция не возвращающая значений Но принимающая 2 числа и выводящая их Сумму
void print_sum(int num1, int num2) {// Создаем параметры и тип переменных int num1
	std::cout << num1 << " + " << num2 << " = " << num1 + num2 << '\n';// Меняем цифры на наши переменные 
	//std::cout << 2 << " + " << 3 << " = " << 2 + 3 <<


}

// Функция возвращающая в нее сумму переданных в нее двух целых чисел.
int sum(int num1, int num2){// Переменные которые отработали int num1, int num2 могут создаваться и дублироваться
	//int tmp = num1 + num2; // Возвращаем значение
	// return tmp; // Вернуть значение переменных Результат сложения тоесть num1 + num2
	return num1 + num2; // Вернуть сумму num1 + num2
}

// Вывод массива в консоль  Функция принимает смассив и выводит ее на экран + С возвращением суммы
void print_arr(int array[], const int lengs) {// Передача массива в функцию int array[] 
	// const это фэйковая Что передадим то значение и примет
	std::cout << '[';
	for (int i = 0; i < lengs; i++)
		std::cout << array[i] << ", ";
	std::cout << "\b\b]\n";
}
// Возвращение sum массива  sum_arr(arr, size)
int sum_arr(int array[], const int lengs) {
	int sum = 0;
	for (int i = 0; i < lengs; i++)
		sum += array[i];
	return sum;	
}

void x2(int num) {// Заменили int на void // num - Это аргумент 
	num *= 2; 
	//return num; // Это с int  Если поставим void то std::cout << x2(n) << '\n'; Не пишем
}
 

void arr_x2(int arr[]) {
	arr[3] *= 2;
}

int main() {
	setlocale(LC_ALL, "Rus");
	int n,m;
	// Функции  void 
	/*say_hello();// Вызов функции с типом void без параметров
	for(int i = 0;i <= 10;i++) // Выводит 10 раз
	say_hello();
	std::cout << "Введите два числа -> ";
	std::cin >> n >> m; // Тут мы сами заводим значения n >> m;
	print_sum(n,m);//Вызов функции с типом void с 2 параметрами
	// Передаем параметры int num1 И ставим наши переменных.
	// Значение которые мы передаем в print_sum(n,m) передаются последовательно
	// Передадим 
	print_sum(10, 7); // Мы тут снова вызвали функцию и передали фиксированные значения.
	*/

	//Функция которая возвращает значение
	/*std::cout << "Введите два числа -> ";
	std::cin >> n >> m;
	int rezult = sum(n,m); //Создадим переменную
	std::cout << "Сумма = " << rezult << '\n'; // Результат работы функции sum
	*/

	// Вывод массива в консоль  Функция принимает смассив и выводит ее на экран
	/*const int size = 15;
	int arr[size]{ 7, 2, 1, 10, 8 };
	std::cout << "Массив: \n";
	print_arr(arr, size);
	std::cout << "Сумма элементов массива: " << sum_arr(arr, size) << std::endl;
	*/

	n = 10;
	// std::cout << x2(n) << '\n'; // Число 10 передается в функцию х2 и возвращается Это с int
	x2(n); // Тут мы передаем переменную в функцию // n - Это параметр
	// Аргумент функции - Это значене  передаваемое в  функцию в момент ее вызова
	// Параметр - Это Копия передаваемого в функцию аргумента .
	int mass[5]{ 10, 20, 30, 40, 50 };
	x2(mass[3]);
	std::cout << mass[3] << '\n';//40 отчет с 0 просто.

	arr_x2(mass);
	std::cout<< mass[3] << '\n';// 80 

	

	//std::cout << n << '\n';  
	return 0;
}